[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Leave Policy Assignment",
  "enabled": 1,
  "modified": "2025-05-24 10:27:06.379518",
  "module": "Psc Hrms",
  "name": "Set Effective Dates",
  "script": "frappe.ui.form.on('Leave Policy Assignment', {\n    refresh: function(frm) {\n        if (frm.doc.assignment_based_on === \"Current Fiscal Year\") {\n            const currentYear = new Date().getFullYear();\n            const startOfYear = `${currentYear}-01-01`;\n            const endOfYear = `${currentYear}-12-31`;\n\n            frm.set_value(\"effective_from\", startOfYear);\n            frm.set_value(\"effective_to\", endOfYear);\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee",
  "enabled": 1,
  "modified": "2025-05-25 16:45:08.682851",
  "module": "Psc Hrms",
  "name": "Leave Allocation for Staff",
  "script": "frappe.listview_settings['Employee'] = {\n  onload: function(list_view) {\n    list_view.page.add_inner_button(__('Allocate Leave Days'), () => {\n      const dialog = new frappe.ui.Dialog({\n        title: __('Allocate Leave Days'),\n        fields: [\n          { fieldtype: 'Link',      label: __('Staff'),                 fieldname: 'employee',               options: 'Employee',   reqd: 1 },\n          { fieldtype: 'Link',      label: __('Leave Type'),            fieldname: 'leave_type',            options: 'Leave Type', reqd: 1 },\n          { fieldtype: 'Float',     label: __('Leave Days'),            fieldname: 'leave_days',            reqd: 1 },\n          { fieldtype: 'Check',     label: __('Current Fiscal Year'),   fieldname: 'current_fiscal_year' },\n          { fieldtype: 'Small Text',label: __('Additional Description'), fieldname: 'additional_description' }\n        ],\n        primary_action_label: __('Create Allocation'),\n        primary_action: function() {\n          frappe.dom.freeze(__('Allocating leave days...'));\n          const args = dialog.get_values(true);\n\n          frappe.call({\n            method: 'psc_hrms.apis.helpers.allocate_leave_days',\n            args: {\n              employee:               args.employee,\n              leave_type:             args.leave_type,\n              leave_days:             args.leave_days,\n              current_fiscal_year:    args.current_fiscal_year ? 1 : 0,\n              additional_description: args.additional_description || ''\n            },\n            callback: function(r) {\n              // Always unfreeze\n              frappe.dom.unfreeze();\n\n              // 1) Success: no exception\n              if (!r.exc) {\n                dialog.hide();\n                list_view.refresh();\n                frappe.show_alert({\n                  message: __('Leave Allocation {0} created', [r.message]),\n                  indicator: 'green'\n                });\n                return;\n              }\n\n              // 2) OverlapError: r.exc contains “Reference: HR-LAL-2025-00032”\n              const overlapMatch = r.exc.match(/Reference:\\s*(HR-LAL-\\d{4}-\\d+)/);\n              if (overlapMatch) {\n                const existingName = overlapMatch[1];\n\n                // fetch that Leave Allocation doc for full context\n                frappe.db.get_doc('Leave Allocation', existingName)\n                  .then(doc => {\n                    const msg = `\n                      <p>Oops! A Document <b>${doc.name}</b> already exists for <b>${doc.employee}</b><br>\n                      for the period <b>${frappe.format_date(doc.from_date)}</b> to <b>${frappe.format_date(doc.to_date)}</b>.</p>\n                    `;\n                    frappe.msgprint({\n                      title: __('Leave Allocation Exists'),\n                      message: msg,\n                      indicator: 'red'\n                    });\n                  })\n                  .catch(() => {\n                    // doc fetch failed\n                    frappe.msgprint({\n                      title: __('Leave Allocation Exists'),\n                      message: __('An allocation already exists ({0}), but we could not fetch its details.', [existingName]),\n                      indicator: 'red'\n                    });\n                  });\n\n                return;\n              }\n\n              // 3) Any other server-side throw\n              frappe.msgprint({\n                title: __('Error'),\n                message: r.exc,\n                indicator: 'red'\n              });\n            },\n            error: function() {\n              // network / HTTP error\n              frappe.dom.unfreeze();\n              frappe.msgprint({\n                title: __('Network Error'),\n                message: __('Please try again.'),\n                indicator: 'red'\n              });\n            }\n          });\n        }\n      });\n\n      dialog.show();\n      dialog.$wrapper.find('.modal-dialog').addClass('modal-lg');\n    }).addClass('btn-primary');\n  }\n};\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Leave Allocation",
  "enabled": 1,
  "modified": "2025-05-25 16:47:20.447602",
  "module": "Psc Hrms",
  "name": "Leave Allocation Inner Button",
  "script": "frappe.listview_settings['Leave Allocation'] = {\n  onload: function(list_view) {\n    list_view.page.add_inner_button(__('Allocate Leave Days'), () => {\n      const dialog = new frappe.ui.Dialog({\n        title: __('Allocate Leave Days'),\n        fields: [\n          { fieldtype: 'Link',      label: __('Staff'),                 fieldname: 'employee',               options: 'Employee',   reqd: 1 },\n          { fieldtype: 'Link',      label: __('Leave Type'),            fieldname: 'leave_type',            options: 'Leave Type', reqd: 1 },\n          { fieldtype: 'Float',     label: __('Leave Days'),            fieldname: 'leave_days',            reqd: 1 },\n          { fieldtype: 'Check',     label: __('Current Fiscal Year'),   fieldname: 'current_fiscal_year' },\n          { fieldtype: 'Small Text',label: __('Additional Description'), fieldname: 'additional_description' }\n        ],\n        primary_action_label: __('Create Allocation'),\n        primary_action: function() {\n          frappe.dom.freeze(__('Allocating leave days...'));\n          const args = dialog.get_values(true);\n\n          frappe.call({\n            method: 'psc_hrms.apis.helpers.allocate_leave_days',\n            args: {\n              employee:               args.employee,\n              leave_type:             args.leave_type,\n              leave_days:             args.leave_days,\n              current_fiscal_year:    args.current_fiscal_year ? 1 : 0,\n              additional_description: args.additional_description || ''\n            },\n            callback: function(r) {\n              // Always unfreeze\n              frappe.dom.unfreeze();\n\n              // 1) Success: no exception\n              if (!r.exc) {\n                dialog.hide();\n                list_view.refresh();\n                frappe.show_alert({\n                  message: __('Leave Allocation {0} created', [r.message]),\n                  indicator: 'green'\n                });\n                return;\n              }\n\n              // 2) OverlapError: r.exc contains “Reference: HR-LAL-2025-00032”\n              const overlapMatch = r.exc.match(/Reference:\\s*(HR-LAL-\\d{4}-\\d+)/);\n              if (overlapMatch) {\n                const existingName = overlapMatch[1];\n\n                // fetch that Leave Allocation doc for full context\n                frappe.db.get_doc('Leave Allocation', existingName)\n                  .then(doc => {\n                    const msg = `\n                      <p>Oops! A Document <b>${doc.name}</b> already exists for <b>${doc.employee}</b><br>\n                      for the period <b>${frappe.format_date(doc.from_date)}</b> to <b>${frappe.format_date(doc.to_date)}</b>.</p>\n                    `;\n                    frappe.msgprint({\n                      title: __('Leave Allocation Exists'),\n                      message: msg,\n                      indicator: 'red'\n                    });\n                  })\n                  .catch(() => {\n                    // doc fetch failed\n                    frappe.msgprint({\n                      title: __('Leave Allocation Exists'),\n                      message: __('An allocation already exists ({0}), but we could not fetch its details.', [existingName]),\n                      indicator: 'red'\n                    });\n                  });\n\n                return;\n              }\n\n              // 3) Any other server-side throw\n              frappe.msgprint({\n                title: __('Error'),\n                message: r.exc,\n                indicator: 'red'\n              });\n            },\n            error: function() {\n              // network / HTTP error\n              frappe.dom.unfreeze();\n              frappe.msgprint({\n                title: __('Network Error'),\n                message: __('Please try again.'),\n                indicator: 'red'\n              });\n            }\n          });\n        }\n      });\n\n      dialog.show();\n      dialog.$wrapper.find('.modal-dialog').addClass('modal-lg');\n    }).addClass('btn-primary');\n  }\n};\n",
  "view": "List"
 }
]